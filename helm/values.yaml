###########
# Deployment and Service
###########
replicaCount: 1
maxUnavailable: 0

image:
  repository: hypertrace/query-service
  pullPolicy: IfNotPresent

containerPort: 8090
containerHealthProbePort: 8091

service:
  type: ClusterIP
  port: 8090

imagePullSecrets: {}

nodeLabels: {}

javaOpts: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=75.0"

livenessProbe:
  initialDelaySeconds: 10
  periodSeconds: 5

readinessProbe:
  initialDelaySeconds: 2
  periodSeconds: 5

resources:
  limits:
    cpu: 2
    memory: 768Mi
  requests:
    cpu: 100m
    memory: 768Mi

deploymentLabels:
  app: query-service

podLabels:
  app: query-service

deploymentSelectorMatchLabels:
  app: query-service

serviceSelectorLabels:
  app: query-service

###########
# Config Maps
###########
queryServiceConfig:
  name: query-service-config
  data:
    zookeeperConnectionString: zookeeper:2181/pinot/my-views
    tenantColumnName: tenant_id

handlers:
  - |-
    name = trace-view-handler
    type = pinot
    clientConfig = zookeeper
    requestHandlerInfo = {
      viewDefinition = {
        viewName = rawTraceView
        fieldMap = {
          "TRACE.id": "trace_id",
          "TRACE.name": "transaction_name",
          "TRACE.startTime": "start_time_millis",
          "TRACE.endTime": "end_time_millis",
          "TRACE.transactionName": "transaction_name",
          "TRACE.services": "services",
          "TRACE.duration": "duration_millis",
          "TRACE.numServices": "num_services",
          "TRACE.numSpans": "num_spans"
        }
      }
    }
  - |-
    name = span-event-view-handler
    type = pinot
    clientConfig = zookeeper
    requestHandlerInfo = {
      viewDefinition = {
        viewName = spanEventView
        mapFields = ["tags"]
        fieldMap = {
          "EVENT.serviceId": "service_id",
          "EVENT.serviceName" : "service_name",
          "EVENT.apiId" : "api_id",
          "EVENT.apiName" : "api_name",
          "EVENT.apiTraceId" : "api_trace_id",
          "EVENT.id" : "span_id",
          "EVENT.startTime": "start_time_millis",
          "EVENT.endTime": "end_time_millis",
          "EVENT.traceId" : "trace_id",
          "EVENT.parentSpanId" : "parent_span_id",
          "EVENT.type" : "span_kind",
          "EVENT.entryApiId": "entry_api_id",
          "EVENT.protocolName": "protocol_name",
          "EVENT.statusCode": "status_code",
          "EVENT.spanTags" : "tags"
          "EVENT.spanRequestUrl" : "request_url",
          "EVENT.duration": "duration_millis",
          "EVENT.displayEntityName": "display_entity_name",
          "EVENT.displaySpanName": "display_span_name",
          "EVENT.errorCount": "error_count",
          "EVENT.exceptionCount": "exception_count"
        }
      }
    }

extraHandlers: []

logConfig:
  name: query-service-log-appender-config
  monitorInterval: 30
  rootLogger:
    level: INFO
  appender:
    rolling:
      enabled: false
